Classfile /Users/laurenkrikorian/Repositories/native-java-article/benchmarking/build/benchmarking/Loop.class
  Last modified Jun 24, 2025; size 2176 bytes
  SHA-256 checksum 23cd2d34850004c1bac911ec913a9d88c45b502320bab4a3bb5fdf00293d3ee2
  Compiled from "Loop.java"
public class benchmarking.Loop
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #15                         // benchmarking/Loop
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 9, attributes: 3
Constant pool:
    #1 = Class              #2            // java/lang/Integer
    #2 = Utf8               java/lang/Integer
    #3 = Methodref          #4.#5         // java/lang/Object."<init>":()V
    #4 = Class              #6            // java/lang/Object
    #5 = NameAndType        #7:#8         // "<init>":()V
    #6 = Utf8               java/lang/Object
    #7 = Utf8               <init>
    #8 = Utf8               ()V
    #9 = Fieldref           #10.#11       // java/lang/System.out:Ljava/io/PrintStream;
   #10 = Class              #12           // java/lang/System
   #11 = NameAndType        #13:#14       // out:Ljava/io/PrintStream;
   #12 = Utf8               java/lang/System
   #13 = Utf8               out
   #14 = Utf8               Ljava/io/PrintStream;
   #15 = Class              #16           // benchmarking/Loop
   #16 = Utf8               benchmarking/Loop
   #17 = String             #18           // Counting to 2147483647\n
   #18 = Utf8               Counting to 2147483647\n
   #19 = Methodref          #20.#21       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #20 = Class              #22           // java/io/PrintStream
   #21 = NameAndType        #23:#24       // println:(Ljava/lang/String;)V
   #22 = Utf8               java/io/PrintStream
   #23 = Utf8               println
   #24 = Utf8               (Ljava/lang/String;)V
   #25 = Integer            2147483647
   #26 = Methodref          #15.#27       // benchmarking/Loop.java_counter:(I)V
   #27 = NameAndType        #28:#29       // java_counter:(I)V
   #28 = Utf8               java_counter
   #29 = Utf8               (I)V
   #30 = Methodref          #15.#31       // benchmarking/Loop.java_volatile_counter:(I)V
   #31 = NameAndType        #32:#29       // java_volatile_counter:(I)V
   #32 = Utf8               java_volatile_counter
   #33 = Methodref          #10.#34       // java/lang/System.currentTimeMillis:()J
   #34 = NameAndType        #35:#36       // currentTimeMillis:()J
   #35 = Utf8               currentTimeMillis
   #36 = Utf8               ()J
   #37 = Methodref          #38.#39       // java/lang/Long.valueOf:(J)Ljava/lang/Long;
   #38 = Class              #40           // java/lang/Long
   #39 = NameAndType        #41:#42       // valueOf:(J)Ljava/lang/Long;
   #40 = Utf8               java/lang/Long
   #41 = Utf8               valueOf
   #42 = Utf8               (J)Ljava/lang/Long;
   #43 = Methodref          #15.#44       // benchmarking/Loop.c_counter:(I)V
   #44 = NameAndType        #45:#29       // c_counter:(I)V
   #45 = Utf8               c_counter
   #46 = Methodref          #38.#47       // java/lang/Long.longValue:()J
   #47 = NameAndType        #48:#36       // longValue:()J
   #48 = Utf8               longValue
   #49 = InvokeDynamic      #0:#50        // #0:makeConcatWithConstants:(J)Ljava/lang/String;
   #50 = NameAndType        #51:#52       // makeConcatWithConstants:(J)Ljava/lang/String;
   #51 = Utf8               makeConcatWithConstants
   #52 = Utf8               (J)Ljava/lang/String;
   #53 = Methodref          #15.#54       // benchmarking/Loop.asm_counter:(I)V
   #54 = NameAndType        #55:#29       // asm_counter:(I)V
   #55 = Utf8               asm_counter
   #56 = Fieldref           #15.#57       // benchmarking/Loop.j_count:I
   #57 = NameAndType        #58:#59       // j_count:I
   #58 = Utf8               j_count
   #59 = Utf8               I
   #60 = InvokeDynamic      #1:#50        // #1:makeConcatWithConstants:(J)Ljava/lang/String;
   #61 = String             #62           // Dummy code to prevent optimization
   #62 = Utf8               Dummy code to prevent optimization
   #63 = InvokeDynamic      #2:#50        // #2:makeConcatWithConstants:(J)Ljava/lang/String;
   #64 = Fieldref           #15.#65       // benchmarking/Loop.v_count:I
   #65 = NameAndType        #66:#59       // v_count:I
   #66 = Utf8               v_count
   #67 = InvokeDynamic      #3:#50        // #3:makeConcatWithConstants:(J)Ljava/lang/String;
   #68 = String             #69           // nativeLoop
   #69 = Utf8               nativeLoop
   #70 = Methodref          #10.#71       // java/lang/System.loadLibrary:(Ljava/lang/String;)V
   #71 = NameAndType        #72:#24       // loadLibrary:(Ljava/lang/String;)V
   #72 = Utf8               loadLibrary
   #73 = Utf8               num
   #74 = Utf8               ConstantValue
   #75 = Utf8               Code
   #76 = Utf8               LineNumberTable
   #77 = Utf8               CSort
   #78 = Utf8               (I)I
   #79 = Utf8               main
   #80 = Utf8               ([Ljava/lang/String;)V
   #81 = Utf8               StackMapTable
   #82 = Utf8               java_counter_with_opt
   #83 = Utf8               <clinit>
   #84 = Utf8               SourceFile
   #85 = Utf8               Loop.java
   #86 = Utf8               BootstrapMethods
   #87 = MethodHandle       6:#88         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #88 = Methodref          #89.#90       // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #89 = Class              #91           // java/lang/invoke/StringConcatFactory
   #90 = NameAndType        #51:#92       // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #91 = Utf8               java/lang/invoke/StringConcatFactory
   #92 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #93 = String             #94           // Time to invoke and run JNI C counter = \u0001
   #94 = Utf8               Time to invoke and run JNI C counter = \u0001
   #95 = String             #96           // Java (non volatile) function time: \u0001 ms
   #96 = Utf8               Java (non volatile) function time: \u0001 ms
   #97 = String             #98           // Java function time (with compiler opt): \u0001 ms
   #98 = Utf8               Java function time (with compiler opt): \u0001 ms
   #99 = String             #100          // Java (volatile) function time: \u0001 ms
  #100 = Utf8               Java (volatile) function time: \u0001 ms
  #101 = Utf8               InnerClasses
  #102 = Class              #103          // java/lang/invoke/MethodHandles$Lookup
  #103 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #104 = Class              #105          // java/lang/invoke/MethodHandles
  #105 = Utf8               java/lang/invoke/MethodHandles
  #106 = Utf8               Lookup
{
  public static final int num;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2147483647

  public benchmarking.Loop();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #3                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static native int CSort(int);
    descriptor: (I)I
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE

  public static native void c_counter(int);
    descriptor: (I)V
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE

  public static native void asm_counter(int);
    descriptor: (I)V
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=3, args_size=1
         0: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #17                 // String Counting to 2147483647\n
         5: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         8: ldc           #25                 // int 2147483647
        10: invokestatic  #26                 // Method java_counter:(I)V
        13: ldc           #25                 // int 2147483647
        15: invokestatic  #30                 // Method java_volatile_counter:(I)V
        18: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
        21: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        24: astore_1
        25: ldc           #25                 // int 2147483647
        27: invokestatic  #43                 // Method c_counter:(I)V
        30: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
        33: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        36: astore_2
        37: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        40: aload_2
        41: invokevirtual #46                 // Method java/lang/Long.longValue:()J
        44: aload_1
        45: invokevirtual #46                 // Method java/lang/Long.longValue:()J
        48: lsub
        49: invokedynamic #49,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
        54: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        57: ldc           #25                 // int 2147483647
        59: invokestatic  #53                 // Method asm_counter:(I)V
        62: return
      LineNumberTable:
        line 18: 0
        line 19: 8
        line 20: 13
        line 22: 18
        line 23: 25
        line 24: 30
        line 25: 37
        line 26: 57
        line 27: 62

  public static void java_counter(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=5, args_size=1
         0: iconst_0
         1: putstatic     #56                 // Field j_count:I
         4: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
         7: lstore_1
         8: iconst_0
         9: istore_3
        10: iload_3
        11: iload_0
        12: if_icmpge     29
        15: getstatic     #56                 // Field j_count:I
        18: iconst_1
        19: iadd
        20: putstatic     #56                 // Field j_count:I
        23: iinc          3, 1
        26: goto          10
        29: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
        32: lstore_3
        33: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        36: lload_3
        37: lload_1
        38: lsub
        39: invokedynamic #60,  0             // InvokeDynamic #1:makeConcatWithConstants:(J)Ljava/lang/String;
        44: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        47: getstatic     #56                 // Field j_count:I
        50: iconst_m1
        51: if_icmpne     62
        54: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        57: ldc           #61                 // String Dummy code to prevent optimization
        59: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        62: return
      LineNumberTable:
        line 30: 0
        line 31: 4
        line 32: 8
        line 33: 15
        line 32: 23
        line 35: 29
        line 36: 33
        line 38: 47
        line 39: 54
        line 41: 62
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ long, int ]
        frame_type = 250 /* chop */
          offset_delta = 18
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ long ]

  public static void java_counter_with_opt(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=6, args_size=1
         0: iconst_0
         1: istore_1
         2: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
         5: lstore_2
         6: iconst_0
         7: istore        4
         9: iload         4
        11: iload_0
        12: if_icmpge     24
        15: iinc          1, 1
        18: iinc          4, 1
        21: goto          9
        24: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
        27: lstore        4
        29: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        32: lload         4
        34: lload_2
        35: lsub
        36: invokedynamic #63,  0             // InvokeDynamic #2:makeConcatWithConstants:(J)Ljava/lang/String;
        41: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        44: return
      LineNumberTable:
        line 44: 0
        line 45: 2
        line 46: 6
        line 47: 15
        line 46: 18
        line 49: 24
        line 50: 29
        line 51: 44
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 9
          locals = [ int, long, int ]
        frame_type = 250 /* chop */
          offset_delta = 14

  public static void java_volatile_counter(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=5, args_size=1
         0: iconst_0
         1: putstatic     #64                 // Field v_count:I
         4: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
         7: lstore_1
         8: iconst_0
         9: istore_3
        10: iload_3
        11: iload_0
        12: if_icmpge     29
        15: getstatic     #64                 // Field v_count:I
        18: iconst_1
        19: iadd
        20: putstatic     #64                 // Field v_count:I
        23: iinc          3, 1
        26: goto          10
        29: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
        32: lstore_3
        33: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        36: lload_3
        37: lload_1
        38: lsub
        39: invokedynamic #67,  0             // InvokeDynamic #3:makeConcatWithConstants:(J)Ljava/lang/String;
        44: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        47: getstatic     #64                 // Field v_count:I
        50: iconst_m1
        51: if_icmpne     62
        54: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        57: ldc           #61                 // String Dummy code to prevent optimization
        59: invokevirtual #19                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        62: return
      LineNumberTable:
        line 54: 0
        line 55: 4
        line 56: 8
        line 57: 15
        line 56: 23
        line 59: 29
        line 60: 33
        line 62: 47
        line 63: 54
        line 65: 62
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ long, int ]
        frame_type = 250 /* chop */
          offset_delta = 18
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ long ]

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #68                 // String nativeLoop
         2: invokestatic  #70                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 14: 0
        line 15: 5
}
SourceFile: "Loop.java"
BootstrapMethods:
  0: #87 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #93 Time to invoke and run JNI C counter = \u0001
  1: #87 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #95 Java (non volatile) function time: \u0001 ms
  2: #87 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 Java function time (with compiler opt): \u0001 ms
  3: #87 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #99 Java (volatile) function time: \u0001 ms
InnerClasses:
  public static final #106= #102 of #104; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
